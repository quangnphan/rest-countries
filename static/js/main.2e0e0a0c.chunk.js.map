{"version":3,"sources":["components/Country.js","components/Loading.js","context.js","components/CountryList.js","components/SearchForm.js","pages/Home.js","pages/SingleCountry.js","components/Navbar.js","pages/Error.js","App.js","index.js"],"names":["Country","flag","name","alpha3Code","population","region","capital","to","className","src","alt","toLocaleString","Loading","AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","countries","setCountries","setRegion","theme","setTheme","fetchCountries","useCallback","a","fetch","response","json","data","console","log","fetchFilter","useEffect","Provider","value","useGlobalContext","useContext","CountryList","length","map","item","SearchForm","searchValue","useRef","current","focus","onSubmit","e","preventDefault","type","id","ref","onChange","placeholder","desc","handleFilter","target","hidden","disabled","Home","SingleCountry","code","useParams","country","setCountry","res","getCountry","nativeName","subregion","topLevelDomain","currencies","currency","languages","language","borders","border","index","Navbar","onClick","Error","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e0e0a0c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Country = ({ flag, name, alpha3Code, population, region, capital }) => {\n  return (\n    <Link to={`country/${alpha3Code}`}>\n      <article className=\"country\">\n        <div className=\"img-container\">\n          <img src={flag} alt={name} />\n        </div>\n        <div className=\"country-footer\">\n          <h3>{name}</h3>\n          <h4>Population: <span>{population.toLocaleString()}</span></h4>\n          <h4>Region: <span>{region}</span></h4>\n          <h4>Capital: <span>{capital}</span></h4>\n        </div>\n      </article>\n      </Link>\n  );\n};\nexport default Country;\n","import React from \"react\";\n\nconst Loading = () => {\n    return(\n        <div className=\"loader\"></div>\n    )\n}\n\nexport default Loading","import React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\n\nconst url = \"https://restcountries.com/v2/name/\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"a\");\n  const [countries, setCountries] = useState([]);\n  const [region,setRegion] = useState([])\n  const [theme,setTheme] = useState(\"dark mode\")\n\n  const fetchCountries = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      setCountries(data);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n\n  const fetchFilter = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`https://restcountries.com/v2/region/${region}`);\n      const data = await response.json();\n      setCountries(data);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [region]);\n\n  useEffect(() => {\n    fetchCountries();\n  }, [searchTerm, fetchCountries]);\n  \n  useEffect(()=>{\n    fetchFilter()\n  },[region,fetchFilter])\n  \n  return (\n    <AppContext.Provider\n      value={{ loading, countries, searchTerm, setSearchTerm,setRegion,theme,setTheme}}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport Country from \"./Country\";\nimport Loading from \"./Loading\";\nimport { useGlobalContext } from \"../context\";\n\nexport default function CountryList() {\n  const { countries, loading } = useGlobalContext();\n  if (loading) {\n    return <Loading />;\n  }\n  return (\n    <section className=\"section\">\n      <div className=\"countries-center\">\n        {countries.length > 0 ? (\n          countries.map((item) => {\n            return <Country key={item.alpha3Code} {...item} />;\n          })\n        ) : (\n          <h2 className=\"section-title\">\n            no countries matched your search criteria\n          </h2>\n        )}\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport { useGlobalContext } from \"../context\";\n\nexport default function SearchForm() {\n  const { setSearchTerm, setRegion } = useGlobalContext();\n  const regions = [\n    { name: \"Africa\", desc: \"Africa\" },\n    { name: \"Americas\", desc: \"Americas\" },\n    { name: \"Asia\", desc: \"Asia\" },\n    { name: \"Europe\", desc: \"Europe\" },\n    { name: \"Oceania\", desc: \"Oceania\" },\n  ];\n  const searchValue = React.useRef(\"\");\n  React.useEffect(() => {\n    searchValue.current.focus();\n  }, []);\n\n  function searchCountry() {\n    setSearchTerm(searchValue.current.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n  function handleFilter(e) {\n    setRegion(e);\n  }\n  return (\n    <section className=\"section search\">\n      <form className=\"search-form\" onSubmit={handleSubmit}>\n        <div className=\"form-control\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            ref={searchValue}\n            onChange={searchCountry}\n            placeholder=\"search for a country...\"\n          />\n        </div>\n        <div className=\"filter\">\n          <select\n            name=\"select\"\n            value={regions.name}\n            onChange={(e) => handleFilter(e.target.value)}\n          >\n            <option hidden disabled>Filter by Region</option>\n            <option value=\"Africa\">Africa</option>\n            <option value=\"Americas\">Americas</option>\n            <option value=\"Asia\">Asia</option>\n            <option value=\"Europe\">Europe</option>\n            <option value=\"Oceania\">Oceania</option>\n            <option value=\"Polar\">Polar</option>\n          </select>\n        </div>\n      </form>\n    </section>\n  );\n}\n","import React from \"react\";\nimport CountryList from \"../components/CountryList\";\nimport SearchForm from \"../components/SearchForm\";\nimport { useGlobalContext } from \"../context\";\n\nexport default function Home(){\n    const {theme} = useGlobalContext()\n    return(\n        <main className={`${theme===\"light mode\" ? \"dark\" : \"light\"}`}>\n            <SearchForm />\n            <CountryList />\n        </main>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useParams, Link } from \"react-router-dom\";\n\nconst url = 'https://restcountries.com/v2/alpha/';\n\nexport default function SingleCountry() {\n  const { code } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [country, setCountry] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const getCountry = async () => {\n      try {\n        const res = await fetch(`${url}${code}`);\n        const data = await res.json();\n        setCountry(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCountry();\n  }, [code]);\n  if (loading) {\n    return <Loading />;\n  }\n  if (!country.name) {\n    return <h2>no data found</h2>;\n  }\n  return (\n    <section className=\"section wrapper\">\n      <Link className=\"back-btn\" to=\"/\">\n        back\n      </Link>\n      <div className=\"single-country\">\n        <div className=\"img\">\n          <img src={country.flag} alt={country.name}></img>\n        </div>\n        <div className=\"country-info\">\n          <h3>{country.name}</h3>\n          <div className=\"info-flex\">\n            <div className=\"firstdiv\">\n              <p>\n                <span>Native Name:</span> {country.nativeName}\n              </p>\n              <p>\n                <span>Population:</span> {country.population}\n              </p>\n              <p>\n                <span>Region:</span> {country.region}\n              </p>\n              <p>\n                <span>Sub Region:</span> {country.subregion}\n              </p>\n              <p>\n                <span>Capital:</span> {country.capital}\n              </p>\n            </div>\n            <div>\n              <p>\n                <span>Top Level Domain:</span> {country.topLevelDomain}\n              </p>\n              <p>\n                <span>Currencies:</span>\n                {country.currencies.map((currency) => {\n                  return <> {currency.name}</>;\n                })}\n              </p>\n              <p>\n                <span>Languages:</span>\n                {country.languages.map((language) => {\n                  return <> {language.name}</>;\n                })}\n              </p>\n            </div>\n          </div>\n          <p className=\"border\">\n            <span>Border Countries:</span>\n            {country.borders.map((border, index) => {\n              return (\n                <Link\n                  className=\"border-btn\"\n                  key={index}\n                  to={`/country/${border}`}\n                >\n                  {border}\n                </Link>\n              );\n            })}\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useGlobalContext } from \"../context\";\nexport default function Navbar() {\n  const { theme, setTheme } = useGlobalContext();\n  const handleClick = (e) => {\n      e.preventDefault()\n      if(theme === \"light mode\"){\n        setTheme(\"dark mode\")\n      }else{\n        setTheme(\"light mode\")\n      }\n  }\n  return (\n    <nav className={`navbar ${theme===\"light mode\" ? \"dark\" : \"light\"}`}>\n      <div className=\"nav-width\">\n        <Link to=\"/\" className=\"logo\">\n          Where in the world?\n        </Link>\n        <button onClick={handleClick} className=\"btn-dark\">{theme}</button>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function Error() {\n  return (\n    <section className=\"error-page section wrapper\">\n      <div className=\"error-container\">\n        <h1>Error! Go back to home page.</h1>\n        <Link to=\"/\" className=\"btn\">\n          back home\n        </Link>\n      </div>\n    </section>\n  );\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport SingleCountry from \"./pages/SingleCountry\";\nimport Navbar from \"./components/Navbar\";\nimport Error from \"./pages/Error\"\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/country/:code\">\n          <SingleCountry />\n        </Route>\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}